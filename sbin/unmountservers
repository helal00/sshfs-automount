#!/usr/bin/env bash
_srcsbinpath=$(dirname $(readlink -f $0))
_srchomepath=$(dirname $_srcsbinpath)
_serverlistfile="serverlist.txt"
_mountedfile="$_srcsbinpath/.store/mounted"
_userhome=$HOME

if [ -s "$_srcsbinpath/functions" ] ; then
	. $_srcsbinpath/functions	
else
	echo "$_srcsbinpath/functions file not found!" 1>&2
	exit 1
fi

if [ -f "$_srcsbinpath/$_serverlistfile" ] ; then
	_serverlist="$_srcsbinpath/$_serverlistfile"
elif [ -f "$_srchomepath/$_serverlistfile" ] ; then
	_serverlist="$_srchomepath/$_serverlistfile"
elif [ -f "$_userhome/$_serverlistfile" ] ; then
	_serverlist="$_userhome/$_serverlistfile"
else
	echo "No $_serverlistfile file found in current, previuos or home directory. Create $_serverlistfile file in any of those locations and enter server info as 'user@xxx.xxx.xxx.xxx:/|~/mymounts/mainserver[|long[|time in seconds]]' per line. Things in [] is optional."
	exit 1
fi

declare -a _locationprocessed

readarray _paths < "$_serverlist"
for ln in "${_paths[@]}"
do
	if [ "${ln:0:1}" = "#" ] ; then
		continue
	fi
	#_pparts=($(echo "$ln" | tr "|" " " ))
	
	strtoarry "$ln" "_pparts" '|'
	
	if [ ${#_pparts[@]} -ne 2 ] ; then
		continue
	fi
	_rpath=${_pparts[0]}
	_mpath=${_pparts[1]}
	_mpath=$(eval echo $_mpath)
	_locationprocessed[${#_locationprocessed[@]}]="$_mpath"
	if mountpoint -q "$_mpath" ; then
		read -p "You want to unmount this place $_mpath?(yes/enter to cancel): " _yesumount
		_yesumount=${_yesumount,,}
		if [ ! -z  "$_yesumount" ] && [ "$_yesumount" = "yes" ] ; then
			echo "unmounting...$_mpath"
			fusermount -uz "$_mpath"
			_mpathes=$(escapepath $_mpath)
			sed -i "/$_mpathes$/d" "$_mountedfile"
		fi
	fi
		
done

readarray _paths < "$_mountedfile"
for ln in "${_paths[@]}"
do
	if [ "${ln:0:1}" = "#" ] ; then
		continue
	fi
	_mpath=$(eval echo $ln)
	_inarray=$(echo ${_locationprocessed[@]} | grep -o "$_mpath" | wc -w)
	if [ "$_inarray" -lt 1 ] ; then
		echo "I am into mount :"
		if mountpoint -q "$_mpath" ; then
			read -p "You want to unmount this place $_mpath?(yes/enter to cancel): " _yesumount
			_yesumount=${_yesumount,,}
			if [ ! -z  "$_yesumount" ] && [ "$_yesumount" = "yes" ] ; then
				echo "unmounting...$_mpath"
				fusermount -uz "$_mpath"
				if [ $? -eq 0 ] ; then
					grep -v "$_mpath$" "$_mountedfile" | tee "$_mountedfile" 1>/dev/null
				fi			
			fi
		else
			fusermount -uz "$_mpath"
			_mpathes=$(escapepath $_mpath)
			sed -i "/$_mpathes$/d" "$_mountedfile"
		fi
	fi
		
done
